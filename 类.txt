类
class 类名：
	创建类
	def __init__(self, name):
		初始化类的属性
	def 方法名(self):
		创建类的方法

创建实例
dog = Dog(name)
属性直接访问
dog.name
方法要调用

属性可以使用默认值
修改属性的方法可以直接修改属性，也可以通过方法修改

如果要让内部属性不被外部访问，可以把属性的名称前加上两个下划线__，在Python中，实例的变量名如果以__开头，就变成了一个私有变量（private），只有内部可以访问，外部不能访问
这个时候只能通过类的方法对属性进行访问或者修改

继承
子类继承了其父类的所有属性和方法，同时还可以定义自己的属性和方法。
属性的继承通过super().__init__()
class ElectricCar(Car):
	电动汽车的独特之处 
	def __init__(self, make, model, year):
	初始化父类的属性 
		super().__init__(make, model, year)

多态
新增一个子类，不必对方法做任何修改，实际上，任何依赖父类作为参数的函数或者方法都可以不加修改地正常运行，原因就在于多态

可以重写父类的方法

属性可以是实例
创建Battery类
self.battery = Battery()

导入类
import 
from   import

类名应采用 驼峰命名法 ，即将类名中的每个单词的首字母都大写，而不使用下划线。实例名和模块名都采用小写格式，并在单词之间加上下划线。
在类中，可使用一个空行来分隔方法；而在模块中，可使用两个空行来分隔类。